{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Conda: Create Environment",
      "type": "shell",
      "command": "conda env create -f environment.yml",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Conda: Update Environment",
      "type": "shell",
      "command": "conda env update -f environment.yml --prune",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Dev Server",
      "type": "shell",
      "command": "conda run -n vision-tools python run.py",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "isBackground": true
    },
    {
      "label": "Run All Tests",
      "type": "shell",
      "command": "conda run -n vision-tools python -m pytest",
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Run Tests (Verbose)",
      "type": "shell",
      "command": "conda run -n vision-tools python -m pytest -v",
      "problemMatcher": [],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Run Tests (No Coverage)",
      "type": "shell",
      "command": "conda run -n vision-tools python -m pytest --no-cov",
      "problemMatcher": [],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Run Current Test File",
      "type": "shell",
      "command": "conda run -n vision-tools python -m pytest ${relativeFile}",
      "problemMatcher": [],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Generate Coverage Report",
      "type": "shell",
      "command": "conda run -n vision-tools python -m pytest --cov=app --cov-report=html --cov-report=term-missing",
      "problemMatcher": [],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "conda run -n vision-tools python -m ruff format app tests",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Check Code Formatting",
      "type": "shell",
      "command": "conda run -n vision-tools python -m ruff format --check app tests",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint Code",
      "type": "shell",
      "command": "conda run -n vision-tools python -m ruff check app tests",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint Code (Fix)",
      "type": "shell",
      "command": "conda run -n vision-tools python -m ruff check app tests --fix",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Delete SQLite Database",
      "type": "shell",
      "windows": {
        "command": "$dbPath = Join-Path $env:LOCALAPPDATA 'User\\VisionTools\\config.db'; if (Test-Path $dbPath) { Remove-Item $dbPath; Write-Host 'Database deleted successfully' } else { Write-Host 'No database found' }"
      },
      "linux": {
        "command": "if [ -f ~/.local/share/VisionTools/config.db ]; then rm ~/.local/share/VisionTools/config.db && echo 'Database deleted successfully'; else echo 'No database found'; fi"
      },
      "osx": {
        "command": "if [ -f ~/Library/Application\\ Support/VisionTools/config.db ]; then rm ~/Library/Application\\ Support/VisionTools/config.db && echo 'Database deleted successfully'; else echo 'No database found'; fi"
      },
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      }
    },
    {
      "label": "Pre-commit: Fix All (Ruff)",
      "dependsOn": [
        "Format Code",
        "Lint Code (Fix)"
      ],
      "dependsOrder": "sequence",
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    }
  ]
}